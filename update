reff : https://labs.wsu.edu/winuthayanon/how-to-analyze-single%E2%80%90cell-rna%E2%80%90seq/how-to-install-docker/installing-docker-on-linux/
       https://www.server-world.info/en/note?os=Ubuntu_23.04&p=docker&f=1

#### INSTALL DOCKER
sudo apt update
sudo apt install apt-transport-https ca-certificates curl software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
sudo apt update
apt-cache policy docker-ce
sudo apt install docker-ce
docker --version
sudo systemctl status docker

#### INSTALL DOCKER COMPOSE
mkdir -p ~/.docker/cli-plugins/
curl -SL https://github.com/docker/compose/releases/download/v2.21.0/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
chmod +x ~/.docker/cli-plugins/docker-compose
docker compose version
sudo usermod -aG docker ${USER}
su - ${USER}
docker

18.04 LTS
sudo apt update 
sudo apt install apt-transport-https ca-certificates curl gnupg-agent software-properties-common
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" 
sudo apt update 
sudo apt install docker-ce 
sudo apt install docker-compose 
sudo systemctl start docker 
sudo systemctl enable docker
sudo usermod -aG docker ${USER}
su - ${USER}
id -nG
docker --version
sudo usermod -aG docker username

### HAPUS CACHE
Reff : 
https://renehernandez.io/snippets/cleaning-local-docker-cache/
https://collabnix.com/how-to-clear-docker-cache/
To remove containers, images and networks use:
docker system prune
To remove containers, images, networks and volumes, use
docker system prune --volumes

### Backup/Restore
Reff:
https://dockerlabs.collabnix.com/beginners/saving-images-as-tar/
$ docker ps -a
CONTAINER ID   IMAGE                            NAMES
8a7bd2314e57   arcgis/webadaptor:10.9.1         WEBADAPTOR   
b59a0e2081d8   arcgis/portal:10.9.1             PORTAL
db22d2e146b0   arcgis/server:10.9.1             SERVER
ba74ee865ccf   arcgis/datastore:10.9.1          DATASTORE

$ docker export 8a7bd2314e57 > webadaptor.tar
$ docker export b59a0e2081d8 > ags_portal.tar
$ docker export db22d2e146b0 > ags_server.tar
$ docker export ba74ee865ccf > datastore.tar

$ ssh => target
$ mkdir bck 
$ cd bck
$ scp user@IP:/home/ags/bck/webadaptor.tar .
$ docker import - arcgis/webadaptor:10.9.1 < webadaptor.tar
sha256:87cb0c6f3056053babfd625c7528c2bead824ea7534506e5d3efae1df0c6a371
$ docker import - arcgis/portal:10.9.1 < ags_portal.tar

$ docker images
REPOSITORY                  TAG       IMAGE ID       CREATED          SIZE
arcgis/webadaptor           10.9.1    87cb0c6f3056   27 seconds ago   1.16GB



### PORTAINER
docker container stop portainer && \
docker container rm portainer && \
docker volume rm portainer_data
$ docker image ls
$ docker image rm 728247220223
# http only port 9000:9000
# docker volume create portainer
# docker run -d -p 9000:9000 --name Portainer --restart always -v /var/run/docker.sock:/var/run/docker.sock -v portainer:/data portainer/portainer-ce:latest

docker run -d -p 8000:8000 -p 9443:9443 --name portainer \
    --restart=always \
    -v /var/run/docker.sock:/var/run/docker.sock \
    -v portainer_data:/data \
    -v ./certs:/certs \
    portainer/portainer-ce:latest \
    --sslcert /certs/fullchain.pem \
    --sslkey /certs/privkey.pem

webport http => 8080
docker run -d -p 8000:8000 -p 8080:9000 --name portainer --restart=always \
-v /var/run/docker.sock:/var/run/docker.sock   \
-v portainer_data:/data \
portainer/portainer-ce:latest

    
